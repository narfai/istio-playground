---
# Source: istio/charts/gateways/templates/serviceaccount.yaml

apiVersion: v1
kind: ServiceAccount
metadata:
  name: istio-egressgateway-with-sni-proxy-service-account
  namespace: istio-system
  labels:
    app: istio-egressgateway-with-sni-proxy
    chart: gateways
    heritage: Tiller
    release: istio-egressgateway-with-sni-proxy
---


---
# Source: istio/charts/gateways/templates/clusterrole.yaml

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: istio-egressgateway-with-sni-proxy-istio-system
  labels:
    app: egressgateway-with-sni-proxy
    chart: gateways
    heritage: Tiller
    release: istio-egressgateway-with-sni-proxy
rules:
- apiGroups: ["networking.istio.io"]
  resources: ["virtualservices", "destinationrules", "gateways"]
  verbs: ["get", "watch", "list", "update"]
---

---
# Source: istio/charts/gateways/templates/clusterrolebindings.yaml

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: istio-egressgateway-with-sni-proxy-istio-system
  labels:
    app: egressgateway-with-sni-proxy
    chart: gateways
    heritage: Tiller
    release: istio-egressgateway-with-sni-proxy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: istio-egressgateway-with-sni-proxy-istio-system
subjects:
- kind: ServiceAccount
  name: istio-egressgateway-with-sni-proxy-service-account
  namespace: istio-system
---

---
# Source: istio/charts/gateways/templates/service.yaml

apiVersion: v1
kind: Service
metadata:
  name: istio-egressgateway-with-sni-proxy
  namespace: istio-system
  annotations:
  labels:
    chart: gateways
    heritage: Tiller
    release: istio-egressgateway-with-sni-proxy
    app: istio-egressgateway-with-sni-proxy
    istio: egressgateway-with-sni-proxy
spec:
  type: ClusterIP
  selector:
    release: istio-egressgateway-with-sni-proxy
    app: istio-egressgateway-with-sni-proxy
    istio: egressgateway-with-sni-proxy
  ports:
    -
      name: https
      port: 443
---

---
# Source: istio/charts/gateways/templates/deployment.yaml

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: istio-egressgateway-with-sni-proxy
  namespace: istio-system
  labels:
    chart: gateways
    heritage: Tiller
    release: istio-egressgateway-with-sni-proxy
    app: istio-egressgateway-with-sni-proxy
    istio: egressgateway-with-sni-proxy
spec:
  replicas: 1
  template:
    metadata:
      labels:
        chart: gateways
        heritage: Tiller
        release: istio-egressgateway-with-sni-proxy
        app: istio-egressgateway-with-sni-proxy
        istio: egressgateway-with-sni-proxy
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: istio-egressgateway-with-sni-proxy-service-account
      containers:
        - name: istio-proxy
          image: "docker.io/istio/proxyv2:1.1.8"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 443
            - containerPort: 15090
              protocol: TCP
              name: http-envoy-prom
          args:
          - proxy
          - router
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --log_output_level=default:info
          - --drainDuration
          - '45s' #drainDuration
          - --parentShutdownDuration
          - '1m0s' #parentShutdownDuration
          - --connectTimeout
          - '10s' #connectTimeout
          - --serviceCluster
          - istio-egressgateway-with-sni-proxy
          - --zipkinAddress
          - zipkin.istio-system:9411
          - --proxyAdminPort
          - "15000"
          - --statusPort
          - "15020"
          - --controlPlaneAuthPolicy
          - NONE
          - --discoveryAddress
          - istio-pilot.istio-system:15010
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15020
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 10m
            
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: HOST_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: ISTIO_META_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: ISTIO_META_CONFIG_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          volumeMounts:
          - name: istio-certs
            mountPath: /etc/certs
            readOnly: true
          - name: egressgateway-certs
            mountPath: "/etc/istio/egressgateway-certs"
            readOnly: true
          - name: egressgateway-ca-certs
            mountPath: "/etc/istio/egressgateway-ca-certs"
            readOnly: true
        - image: nginx
          name: sni-proxy
          volumeMounts:
          - mountPath: /etc/nginx
            name: sni-proxy-config
            readOnly: true
        
      volumes:
      - name: istio-certs
        secret:
          secretName: istio.istio-egressgateway-with-sni-proxy-service-account
          optional: true
      - name: egressgateway-certs
        secret:
          secretName: "istio-egressgateway-certs"
          optional: true
      - name: egressgateway-ca-certs
        secret:
          secretName: "istio-egressgateway-ca-certs"
          optional: true
      - name: sni-proxy-config
        configMap:
          name: "egress-sni-proxy-configmap"
          optional: true
      affinity:      
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
                - ppc64le
                - s390x
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 2
            preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
          - weight: 2
            preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - ppc64le
          - weight: 2
            preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - s390x      
---

---
# Source: istio/charts/gateways/templates/autoscale.yaml


